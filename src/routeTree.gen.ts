/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LaucherIndexImport } from './routes/laucher/index'
import { Route as LaucherWithPlayerImport } from './routes/laucher/withPlayer'
import { Route as LaucherWithOnlineImport } from './routes/laucher/withOnline'
import { Route as LaucherWithCpuImport } from './routes/laucher/withCpu'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LaucherIndexRoute = LaucherIndexImport.update({
  id: '/laucher/',
  path: '/laucher/',
  getParentRoute: () => rootRoute,
} as any)

const LaucherWithPlayerRoute = LaucherWithPlayerImport.update({
  id: '/laucher/withPlayer',
  path: '/laucher/withPlayer',
  getParentRoute: () => rootRoute,
} as any)

const LaucherWithOnlineRoute = LaucherWithOnlineImport.update({
  id: '/laucher/withOnline',
  path: '/laucher/withOnline',
  getParentRoute: () => rootRoute,
} as any)

const LaucherWithCpuRoute = LaucherWithCpuImport.update({
  id: '/laucher/withCpu',
  path: '/laucher/withCpu',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/laucher/withCpu': {
      id: '/laucher/withCpu'
      path: '/laucher/withCpu'
      fullPath: '/laucher/withCpu'
      preLoaderRoute: typeof LaucherWithCpuImport
      parentRoute: typeof rootRoute
    }
    '/laucher/withOnline': {
      id: '/laucher/withOnline'
      path: '/laucher/withOnline'
      fullPath: '/laucher/withOnline'
      preLoaderRoute: typeof LaucherWithOnlineImport
      parentRoute: typeof rootRoute
    }
    '/laucher/withPlayer': {
      id: '/laucher/withPlayer'
      path: '/laucher/withPlayer'
      fullPath: '/laucher/withPlayer'
      preLoaderRoute: typeof LaucherWithPlayerImport
      parentRoute: typeof rootRoute
    }
    '/laucher/': {
      id: '/laucher/'
      path: '/laucher'
      fullPath: '/laucher'
      preLoaderRoute: typeof LaucherIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/laucher/withCpu': typeof LaucherWithCpuRoute
  '/laucher/withOnline': typeof LaucherWithOnlineRoute
  '/laucher/withPlayer': typeof LaucherWithPlayerRoute
  '/laucher': typeof LaucherIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/laucher/withCpu': typeof LaucherWithCpuRoute
  '/laucher/withOnline': typeof LaucherWithOnlineRoute
  '/laucher/withPlayer': typeof LaucherWithPlayerRoute
  '/laucher': typeof LaucherIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/laucher/withCpu': typeof LaucherWithCpuRoute
  '/laucher/withOnline': typeof LaucherWithOnlineRoute
  '/laucher/withPlayer': typeof LaucherWithPlayerRoute
  '/laucher/': typeof LaucherIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/laucher/withCpu'
    | '/laucher/withOnline'
    | '/laucher/withPlayer'
    | '/laucher'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/laucher/withCpu'
    | '/laucher/withOnline'
    | '/laucher/withPlayer'
    | '/laucher'
  id:
    | '__root__'
    | '/'
    | '/laucher/withCpu'
    | '/laucher/withOnline'
    | '/laucher/withPlayer'
    | '/laucher/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LaucherWithCpuRoute: typeof LaucherWithCpuRoute
  LaucherWithOnlineRoute: typeof LaucherWithOnlineRoute
  LaucherWithPlayerRoute: typeof LaucherWithPlayerRoute
  LaucherIndexRoute: typeof LaucherIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LaucherWithCpuRoute: LaucherWithCpuRoute,
  LaucherWithOnlineRoute: LaucherWithOnlineRoute,
  LaucherWithPlayerRoute: LaucherWithPlayerRoute,
  LaucherIndexRoute: LaucherIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/laucher/withCpu",
        "/laucher/withOnline",
        "/laucher/withPlayer",
        "/laucher/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/laucher/withCpu": {
      "filePath": "laucher/withCpu.tsx"
    },
    "/laucher/withOnline": {
      "filePath": "laucher/withOnline.tsx"
    },
    "/laucher/withPlayer": {
      "filePath": "laucher/withPlayer.tsx"
    },
    "/laucher/": {
      "filePath": "laucher/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
